local SaveManager = require('ge_tts.SaveManager')

local GlobalGrid = Grid

---@class ge_tts__Grid : tts__GlobalGrid
local Grid = {}

Grid.Type = {
    Box = 1,
    HexHorizontal = 2,
    HexVertical = 3,
}

Grid.Snapping = {
    None = 1,
    Lines = 2,
    Center = 3,
    LinesAndCenter = 4,
}

-- We're tracking snapping as a *partial* work-around for a TTS bug:
--   https://github.com/tts-community/tts-community-bug-tracker/issues/28
-- It's a partial work-around in that we'll return the correct value for snapping as long as it's only set using this
-- wrapper. If Grid.snapping is changed by script without using this wrapper or by UI, our return value will be wrong.

---@type tts__GridSnapping
local snapping = GlobalGrid.snapping

setmetatable(Grid, {
    __index = function(_, key)
        if key == 'snapping' then
            local ttsSnapping = GlobalGrid.snapping

            -- At the time of writing Grid.Snapping.Lines is the only value that we can trust from TTS...
            if ttsSnapping == Grid.Snapping.Lines then
                snapping = Grid.Snapping.Lines
            end

            return snapping
        end

        return GlobalGrid[key]
    end,
    __newindex = function(_, key, value)
        if key == 'snapping' then
            snapping = value
        end

        GlobalGrid[key] = value
    end
})


---@return string
local function onSave()
    return tostring(snapping)
end

---@param savedState string
local function onLoad(savedState)
    if savedState ~= '' then
        snapping = tonumber(savedState)
    end
end

local MODULE_NAME = 'ge_tts.Grid'

SaveManager.registerOnSave(MODULE_NAME, onSave)
SaveManager.registerOnLoad(MODULE_NAME, onLoad)

return Grid
